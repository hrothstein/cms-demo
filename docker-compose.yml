version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: cms-postgres
    environment:
      POSTGRES_DB: cms_db
      POSTGRES_USER: cms_user
      POSTGRES_PASSWORD: cms_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/seeds/seed_data.sql:/docker-entrypoint-initdb.d/02-seed_data.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cms_user -d cms_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: .
      dockerfile: Dockerfile.backend
    container_name: cms-backend
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: cms_db
      DB_USER: cms_user
      DB_PASSWORD: cms_password
      DATABASE_URL: postgresql://cms_user:cms_password@postgres:5432/cms_db
      JWT_SECRET: demo-jwt-secret-key-change-in-production-must-be-32-chars-minimum
      JWT_EXPIRES_IN: 1h
      ENCRYPTION_KEY: demo-encryption-key-here-must-be-32-chars
      ALLOWED_ORIGINS: http://localhost:3000,http://localhost:5173,http://localhost:8080
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: cms-frontend
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:3000/api/v1
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped

volumes:
  postgres_data:
